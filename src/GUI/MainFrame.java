/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import network.Client;
import network.ConnectedClient;
import network.Server;

/**
 *
 * @author aftab
 */
public class MainFrame extends javax.swing.JFrame {

    public static DefaultTableModel tableModel;
    private final DefaultTableCellRenderer renderer;

    /**
     * Creates new form MainFrame
     */
    public static void addRow(Object[] row) {
        tableModel.addRow(row);
    }

    public MainFrame() {
        initComponents();
        this.portLabel.setVisible(false);
        this.portNumber.setVisible(false);
        this.maxClientLabel.setVisible(false);
        this.maxClients.setVisible(false);
        this.fileLabel.setVisible(false);
        this.file.setVisible(false);
        this.startServer.setVisible(false);
        this.sendFileButton.setVisible(false);
        this.sendFileLabel.setVisible(false);
        this.sendFileToClient.setVisible(false);
        this.tabelPanel.setVisible(false);
        this.in.setVisible(false);
        this.threads.setVisible(false);
        this.threadLabel.setVisible(false);
        this.address.setVisible(false);
        this.addressLabel.setVisible(false);

        tableModel = (DefaultTableModel) Table.getModel();
        renderer = new DefaultTableCellRenderer();
        renderer.setHorizontalAlignment(SwingConstants.CENTER);
        Table.getColumnModel().getColumn(0).setCellRenderer(renderer);
        Table.getColumnModel().getColumn(1).setCellRenderer(renderer);
        Table.getColumnModel().getColumn(2).setCellRenderer(renderer);

        //this.Table.setVisible(false); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        server = new javax.swing.JButton();
        client = new javax.swing.JButton();
        portLabel = new javax.swing.JLabel();
        portNumber = new javax.swing.JTextField();
        startServer = new javax.swing.JButton();
        addressLabel = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        sendFileLabel = new javax.swing.JLabel();
        sendFileButton = new javax.swing.JButton();
        sendFileToClient = new javax.swing.JTextField();
        maxClientLabel = new javax.swing.JLabel();
        maxClients = new javax.swing.JTextField();
        fileLabel = new javax.swing.JLabel();
        file = new javax.swing.JLabel();
        tabelPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        in = new javax.swing.JLabel();
        threads = new javax.swing.JTextField();
        threadLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Lucida Handwriting", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("RAVEN");

        server.setText("BE A SERVER");
        server.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverActionPerformed(evt);
            }
        });

        client.setText("BE A CLIENT");
        client.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientActionPerformed(evt);
            }
        });

        portLabel.setForeground(new java.awt.Color(255, 255, 255));
        portLabel.setText("Server Port : ");

        portNumber.setText("24");
        portNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portNumberActionPerformed(evt);
            }
        });

        startServer.setText("Start Server");
        startServer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        startServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startServerActionPerformed(evt);
            }
        });

        addressLabel.setForeground(new java.awt.Color(255, 255, 255));
        addressLabel.setText("I Am Waiting For Clients at : ");

        address.setForeground(new java.awt.Color(255, 255, 255));
        address.setText("...");

        sendFileLabel.setForeground(new java.awt.Color(255, 255, 255));
        sendFileLabel.setText("Send File to Client : ");

        sendFileButton.setText("Send File");
        sendFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileButtonActionPerformed(evt);
            }
        });

        sendFileToClient.setText("     ");
        sendFileToClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFileToClientActionPerformed(evt);
            }
        });

        maxClientLabel.setForeground(new java.awt.Color(255, 255, 255));
        maxClientLabel.setText("Max Clients : ");

        maxClients.setText("10");
        maxClients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxClientsActionPerformed(evt);
            }
        });

        fileLabel.setForeground(new java.awt.Color(255, 255, 255));
        fileLabel.setText("File : ");

        file.setForeground(new java.awt.Color(153, 0, 0));
        file.setText("No File Selected, Click to Select!");
        file.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        file.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileMouseClicked(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Client IP", "Status"
            }
        ));
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout tabelPanelLayout = new javax.swing.GroupLayout(tabelPanel);
        tabelPanel.setLayout(tabelPanelLayout);
        tabelPanelLayout.setHorizontalGroup(
            tabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabelPanelLayout.setVerticalGroup(
            tabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        in.setForeground(new java.awt.Color(255, 255, 255));
        in.setText("in");

        threads.setText("     ");
        threads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threadsActionPerformed(evt);
            }
        });

        threadLabel.setForeground(new java.awt.Color(255, 255, 255));
        threadLabel.setText("Threads.");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(server, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(client, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(sendFileLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendFileToClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(in)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(threadLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sendFileButton))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addComponent(addressLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(address))
                                    .addComponent(tabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                            .addComponent(maxClientLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(maxClients, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(startServer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                                            .addComponent(portLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(portNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(fileLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(file))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(server)
                    .addComponent(client))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portLabel)
                    .addComponent(portNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileLabel)
                    .addComponent(file))
                .addGap(5, 5, 5)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startServer)
                    .addComponent(maxClientLabel)
                    .addComponent(maxClients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLabel)
                    .addComponent(address))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendFileToClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendFileLabel)
                    .addComponent(sendFileButton)
                    .addComponent(in)
                    .addComponent(threads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(threadLabel))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverActionPerformed
        this.portLabel.setVisible(true);
        this.portNumber.setVisible(true);
        this.startServer.setVisible(true);
        this.startServer.setEnabled(false);
        this.maxClientLabel.setVisible(true);
        this.maxClients.setVisible(true);
        this.fileLabel.setVisible(true);
        this.file.setVisible(true);
        this.client.setVisible(false);
        this.server.setVisible(false);


    }//GEN-LAST:event_serverActionPerformed

    private void clientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientActionPerformed
        //raven.Raven.client = new Client("192.168.0.107", 24);
        raven.Raven.cf = new ClientFrame();
        raven.Raven.cf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_clientActionPerformed

    private void startServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startServerActionPerformed
        int port, clients;
        try {
            port = Integer.valueOf(this.portNumber.getText());
            clients = Integer.valueOf(this.maxClients.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e + "\nDont be Childish!!", "ERROR", ERROR_MESSAGE);
            return;
        }
        boolean started = false;
        try {
            raven.Raven.server = new Server(port, clients);
            raven.Raven.server.startAcceptingClients();
            started = true;
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex + "\nTry to change the port number!!", "ERROR", ERROR_MESSAGE);
        }

        if (started) {
            this.portLabel.setVisible(false);
            this.portNumber.setVisible(false);
            this.startServer.setVisible(false);
            this.maxClientLabel.setVisible(false);
            this.maxClients.setVisible(false);

            this.tabelPanel.setVisible(true);
            this.sendFileButton.setVisible(true);
            this.sendFileLabel.setVisible(true);
            this.sendFileToClient.setVisible(true);
            this.in.setVisible(true);
            this.threads.setVisible(true);
            this.threadLabel.setVisible(true);

            String IP = raven.Raven.server.getIPAdress();

            this.address.setText(IP + " : " + port);
            this.addressLabel.setVisible(true);
            this.address.setVisible(true);
        }
    }//GEN-LAST:event_startServerActionPerformed

    private void portNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portNumberActionPerformed

    private void sendFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileButtonActionPerformed
        int clientNo, cons;
        try {
            clientNo = Integer.valueOf(this.sendFileToClient.getText().trim());
            cons = Integer.valueOf(this.threads.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e + "\nDont be Childish!!", "ERROR", ERROR_MESSAGE);
            return;
        }
        
        File myfile = raven.Raven.file;
        int totalClients = network.Server.Receivers.size();
        for (int i = 0; i < totalClients; i++)
        {
            ConnectedClient c = (ConnectedClient) network.Server.Receivers.get(i);
            if(c.name == clientNo)
            {
                c.sendFile(myfile, cons);
                break;
            }
        }
        
     }//GEN-LAST:event_sendFileButtonActionPerformed

    private void sendFileToClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFileToClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendFileToClientActionPerformed

    private void maxClientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxClientsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxClientsActionPerformed

    private void fileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMouseClicked
        System.out.println("I CLICKED");
        
        JFileChooser jf = new JFileChooser();
        int rValue = jf.showOpenDialog(this);
        if (rValue == JFileChooser.APPROVE_OPTION) {
            
            raven.Raven.file = jf.getSelectedFile();
            System.out.println(raven.Raven.file.length());
            if (raven.Raven.file.canRead()) {
                this.file.setText(raven.Raven.file.getName());
                this.file.setForeground(Color.green);
                this.startServer.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(this, "Cannot Read the File!!", "ERROR", ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_fileMouseClicked

    private void threadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threadsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_threadsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable Table;
    private javax.swing.JLabel address;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton client;
    private javax.swing.JLabel file;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JLabel in;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel maxClientLabel;
    private javax.swing.JTextField maxClients;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField portNumber;
    private javax.swing.JButton sendFileButton;
    private javax.swing.JLabel sendFileLabel;
    private javax.swing.JTextField sendFileToClient;
    private javax.swing.JButton server;
    private javax.swing.JButton startServer;
    private javax.swing.JPanel tabelPanel;
    private javax.swing.JLabel threadLabel;
    private javax.swing.JTextField threads;
    // End of variables declaration//GEN-END:variables
}
